@mixin respond-to($breakpoint) {

  @if $breakpoint == "default" {
    @content;
  }

  @if $breakpoint == "xxxxxx-small" {
    @media (min-width: $xxxxxx-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "xxxxx-small" {
    @media (min-width: $xxxxx-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "xxxx-small" {
    @media (min-width: $xxxx-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "xxx-small" {
    @media (min-width: $xxx-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "xx-small" {
    @media (min-width: $xx-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "x-small" {
    @media (min-width: $x-small-breakpoint) {
      @content;
    }
  }

  @if $breakpoint == "small" {
    @media (min-width: $small-breakpoint) {
      @content;
    }
  }

  @else if $breakpoint == "large" {
    @media (min-width: $large-breakpoint) {
      @content;
    }
  }
}

@mixin set-page-height($breakpoint, $height) {
  @include respond-to($breakpoint) {
    .page-container {
      img {
        height: $height;
      }

      .image-container {
          height: calc(#{$height} + 4rem);
      }
    }
  }
}

@mixin lay-out-without-grid{
  .app {
    position: relative;
  }

  .header {
    height: $header-height;

  }

  .main-section {
    display: block; /* Internet Explorer */
    margin-left: $menu-width;
    position: relative;
    .loading-spinner {
      margin: 0 auto;
      position: absolute;
      left: 0;
      right: 0;
      top: 50%;
      bottom: 50%;
      transform: translate(0, -50%);
    }
  }

  .menu {
    position: absolute;
    top: calc(#{$header-height} + #{$navbar-height} + 2px);
    bottom: 0;
    width: $menu-width;
  }

  .navbar {
    height: $navbar-height;
  }

  .ReactModal__Content {
  }
}
